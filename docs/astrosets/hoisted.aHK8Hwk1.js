import"./hoisted.B1_uNwtp.js";async function h(){const o=await fetch("/shaders/quads.wgsl");if(console.log("loadFragShader",o),!o.ok){console.error("Failed to load shader.");return}const b=await o.text(),u=document.getElementById("canvas-quad");if(!u){console.error("Canvas not found.");return}if(!navigator.gpu){console.error("WebGPU not supported on this browser.");return}const i=await navigator.gpu.requestAdapter();if(!i){console.error("No appropriate GPUAdapter found.");return}const a=navigator.gpu.getPreferredCanvasFormat();if(!a){console.error("No appropriate CanvasFormat found.");return}const e=await i.requestDevice(),n=u.getContext("webgpu");if(!n){console.error("WebGPU context not supported on this browser.");return}n.configure({device:e,format:a});const t=32,s=new Float32Array([-.8,-.8,.8,-.8,.8,.8,-.8,-.8,.8,.8,-.8,.8]),c=e.createBuffer({label:"Cell vertices",size:s.byteLength,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST});e.queue.writeBuffer(c,0,s);const m={arrayStride:8,attributes:[{format:"float32x2",offset:0,shaderLocation:0}]},l=e.createShaderModule({label:"Cell shader",code:b}),d=e.createRenderPipeline({label:"Cell pipeline",layout:"auto",vertex:{module:l,entryPoint:"vertexMain",buffers:[m]},fragment:{module:l,entryPoint:"fragmentMain",targets:[{format:a}]}}),f=new Float32Array([t,t]),g=e.createBuffer({label:"Grid Uniforms",size:f.byteLength,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});e.queue.writeBuffer(g,0,f);const v=e.createBindGroup({label:"Cell renderer bind group",layout:d.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:g}}]}),p=e.createCommandEncoder(),r=p.beginRenderPass({colorAttachments:[{view:n.getCurrentTexture().createView(),loadOp:"clear",clearValue:{r:0,g:0,b:.4,a:1},storeOp:"store"}]});r.setPipeline(d),r.setVertexBuffer(0,c),r.setBindGroup(0,v),r.draw(s.length/2,t*t),r.end(),e.queue.submit([p.finish()])}document.addEventListener("astro:page-load",h);
