import"./hoisted.B1_uNwtp.js";async function p(){const t=await fetch("/shaders/cell.wgsl");if(console.log("loadFragShader",t),!t.ok){console.error("Failed to load shader.");return}const d=await t.text();console.log("astro:page-load");const s=document.getElementById("canvas-tri");if(!s){console.error("Canvas not found.");return}if(!navigator.gpu){console.error("WebGPU not supported on this browser.");return}const c=await navigator.gpu.requestAdapter();if(!c){console.error("No appropriate GPUAdapter found.");return}const o=navigator.gpu.getPreferredCanvasFormat();if(!o){console.error("No appropriate CanvasFormat found.");return}const e=await c.requestDevice(),a=s.getContext("webgpu");if(!a){console.error("WebGPU context not supported on this browser.");return}a.configure({device:e,format:o});const n=new Float32Array([-.8,-.8,0,.8,.8,-.8]),l=e.createBuffer({label:"Cell vertices",size:n.byteLength,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST});e.queue.writeBuffer(l,0,n);const f={arrayStride:8,attributes:[{format:"float32x2",offset:0,shaderLocation:0}]},i=e.createShaderModule({label:"Cell shader",code:d}),g=e.createRenderPipeline({label:"Cell pipeline",layout:"auto",vertex:{module:i,entryPoint:"vertexMain",buffers:[f]},fragment:{module:i,entryPoint:"fragmentMain",targets:[{format:o}]}}),u=e.createCommandEncoder(),r=u.beginRenderPass({colorAttachments:[{view:a.getCurrentTexture().createView(),loadOp:"clear",clearValue:{r:0,g:0,b:.4,a:1},storeOp:"store"}]});r.setPipeline(g),r.setVertexBuffer(0,l),r.draw(n.length/2),r.end(),e.queue.submit([u.finish()])}document.addEventListener("astro:page-load",p);
