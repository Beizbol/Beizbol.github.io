import"./hoisted.e207ed2d.js";class p{x;y;w;h;text;icon;bg;font;color;constructor(e,o,i,l){this.x=e.left,this.y=e.top,this.w=e.width,this.h=e.height,this.text=o,this.icon=new Image,this.icon.src=l,this.bg=i,this.font="16px sans-serif",this.color="#FFFFFF"}updateIcon(e){this.icon.src=e}updateText(e){this.text=e,this.w=e.length*8+50}move(e,o){this.x=e,this.y=o}drawPin(e){console.log("pin img ",this.icon),e.fillStyle=this.bg,e.fillRect(this.x-24,this.y-this.h/2,this.w,this.h),e.beginPath();const o=this.x+this.w/2-24;e.moveTo(o-10,this.y+5),e.lineTo(o,this.y+25),e.lineTo(o+10,this.y+5),e.closePath(),e.fill(),e.drawImage(this.icon,this.x-20,this.y-12,24,24),e.fillStyle=this.color,e.font=this.font,e.fillText(this.text,this.x+8,this.y+6)}isMouseOver(e,o){return e>this.x-36&&e<this.x-12+this.w&&o>this.y-20&&o<this.y+this.h}clone(){return new p({left:this.x,top:this.y,width:this.w,height:this.h},this.text,this.bg,this.icon.src)}}const s=document.getElementById("canvas"),d=s.getContext("2d"),c=document.getElementById("pcanvas"),g=c.getContext("2d"),y=document.getElementById("pick"),h=new Image,v=document.getElementById("icon-img");v.onload=()=>{console.log("icon loaded"),a()};const w=document.getElementById("icons"),m=document.getElementById("pinColor"),x=document.getElementById("pinText");document.getElementById("ptxt");let r=new p({top:20,left:40,width:100,height:30},"Pin Text",m.value,v.src);document.getElementById("cpin");const n={placed:[],held:null,canvasHover:!1,pin_offset_x:0,pin_offset_y:0};a();s.addEventListener("mouseenter",t=>{console.log("entered"),n.canvasHover=!0});s.addEventListener("mouseleave",t=>{n.canvasHover=!1});c.addEventListener("mouseenter",t=>{n.pcanvasHover=!0});c.addEventListener("mouseleave",t=>{n.held&&(n.held.move(40,20),a()),n.pcanvasHover=!1});s.addEventListener("mousemove",t=>{if(!n.held||!n.canvasHover)return;console.log("move");const e=s.getBoundingClientRect(),o=t.clientX-e.left,i=t.clientY-e.top;n.held.move(o,i),u()});c.addEventListener("mousemove",t=>{if(!n.held||!n.pcanvasHover)return;const e=c.getBoundingClientRect(),o=t.clientX-e.left,i=t.clientY-e.top;n.held.move(o,i),a()});s.addEventListener("mousedown",t=>{if(console.log("canvas click",n.pcanvasHover),!n.canvasHover)return;const e=s.getBoundingClientRect(),o=t.clientX-e.left,i=t.clientY-e.top;for(let l=0;l<n.placed.length;l++){const f=n.placed[l];if(f.isMouseOver(o,i)){s.style.cursor="grabbing",n.held=f,n.placed.pop(l),console.log("Holding pin");return}}});c.addEventListener("mousedown",t=>{if(console.log("pcanvas click",n.pcanvasHover),!n.pcanvasHover)return;const e=c.getBoundingClientRect(),o=t.clientX-e.left,i=t.clientY-e.top;console.log(r),r.isMouseOver(o,i)&&(c.style.cursor="grabbing",n.held=r,console.log("Holding pin"))});document.addEventListener("mouseup",t=>{if(s.style.cursor="grab",c.style.cursor="grab",!!n.held){if(n.canvasHover){console.log("placing in canvas");const e=s.getBoundingClientRect(),o=t.clientX-e.left,i=t.clientY-e.top;n.held.move(o,i);const l=n.held.clone();console.log(l),n.placed.push(l),n.held=null,u()}r.move(40,20),a(),n.held=!1,n.pin_offset_x=0,n.pin_offset_y=0}});w.addEventListener("change",t=>{console.log("val ",t.target.value),v.src=t.target.value,r.updateIcon(t.target.value),a()});m.addEventListener("change",t=>{preview.style.backgroundColor=t.target.value,a()});x.addEventListener("change",t=>{r.updateText(t.target.value),a()});y.addEventListener("change",t=>{if(t.target.files.length<1){alert("No image files selected.");return}if(t.target.files.length>1){alert("One image file at a time.");return}const e=URL.createObjectURL(t.target.files[0]);h.src=e,h.onload=()=>{console.log("loaded"),u()}});function u(){if(d.clearRect(0,0,s.width,s.height),console.log(h.src),h.src){const{width:t,height:e}=h;console.log(e,t),d.canvas.width=t,d.canvas.height=e,s.style.width=t+"px",s.style.height=e+"px",d.drawImage(h,0,0)}for(let t=0;t<n.placed.length;t++){const e=n.placed[t];console.log("pin: ",e),e.drawPin(d),console.log("placed pin drawn")}n.held&&n.held.drawPin(d)}function a(){g.clearRect(0,0,g.canvas.width,g.canvas.height),r.drawPin(g),console.log("preview drawn")}
