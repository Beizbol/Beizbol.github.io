---
import Slider from "../../components/Slider.astro";
import Page from "../../layouts/Page.astro";
---

<Page title="TicTacToe">
  <select name="mode" id="pick">
    <option value="weak">Goldilocks</option>
    <option value="strong">Player</option>
    <option value="random">Blind Bat</option>
    <option value="perfect">Cyborg</option>
    <option value="mirror">Monkey See</option>
  </select>
  <div class="wrap">
    <button class="tile"></button>
    <button class="tile"></button>
    <button class="tile"></button>
    <button class="tile"></button>
    <button class="tile"></button>
    <button class="tile"></button>
    <button class="tile"></button>
    <button class="tile"></button>
    <button class="tile"></button>
  </div>

  <style>
    .wrap {
      display: grid;
      justify-content: center;
      align-content: center;
      flex-grow: 1;
      grid-template-columns: repeat(3, 5em);
      grid-template-rows: repeat(3, 5em);
      gap: 1rem;
      padding-bottom: 1rem;
    }

    .tile {
      display: flex;
      padding: 1rem;
      background-color: var(--color-accent);
      border-radius: 0.5rem;
      box-shadow: 0.2rem 0.2rem 0.5rem 0.1rem;
      align-items: center;
      justify-content: center;
      font-family: cursive;
      font-size: 3em;
      font-weight: 600;
    }
  </style>

  <script>
    import confetti from "canvas-confetti";
    const ttt = () => {
      const rows = [0, 1, 2];

      const modes = {
        weak: "weak",
        strong: "strong",
        random: "random",
        perfect: "perfect",
        mirror: "mirror",
      };

      const state = {
        level: 0,
        board: Array(9).fill(""),
        player: "X",
        ai: "O",
      };

      const tiles = [...document.querySelectorAll<HTMLButtonElement>(".tile")];
      init();

      function init() {
        tiles.forEach((btn, idx) => {
          btn.dataset.letter = "";
          btn.innerText = "";
          btn.onclick = () => {
            flip(idx);
          };
        });
      }

      function flip(idx: number) {
        if (tiles[idx].dataset.letter !== "") {
          return;
        }

        // console.log(idx);
        flip_tile(tiles[idx], "X");
        if (checkWinner()) {
          youWin();
          return;
        }
        const spots = [...document.querySelectorAll<HTMLButtonElement>('[data-letter=""]')];
        // console.log(spots);
        if (spots.length === 0) {
          youDraw();
          return;
        }

        const pick = pick_tile(spots);
        flip_tile(pick, "O");
        if (checkWinner()) {
          youLose();
          return;
        }
      }

      function isCpu(list: string[]) {}

      function findKill(spots: HTMLButtonElement[]): number | undefined {
        if (spots.length < 1 || spots.length > 4) {
          return;
        }
        if (list.includes(state.player)) {
          return;
        }
        const spaces = [];
        for (let i = 0; i < 3; i++) {
          if (list[i] === "") {
            spaces.push(i);
          }
        }
        if (spaces.length === 1) {
          return spaces[0];
        }
      }

      function pick_tile(spots: HTMLButtonElement[]): HTMLButtonElement {
        if (state.level > 5) {
          const idx = findWin(spots);
          if (idx) {
            return spots[idx];
          }
          return spots[Math.floor(Math.random() * spots.length)];
        }
        return spots[Math.floor(Math.random() * spots.length)];
      }

      function flip_tile(tile: HTMLButtonElement, char: string) {
        tile.dataset.letter = char;
        tile.textContent = char;
      }

      function checkWinner(): boolean {
        // Check row and column matches
        const board = tiles.flatMap((tile) => {
          return tile.textContent;
        });
        // console.log(board);
        for (let i = 0; i < 3; i++) {
          const row = 3 * i;
          if (board[row] !== "" && board[row] === board[row + 1] && board[row] === board[row + 2]) {
            // console.log("row win");
            return true;
          }
          if (board[i] !== "" && board[i] === board[i + 3] && board[i] === board[i + 6]) {
            // console.log("col win");
            return true;
          }
        }

        if (board[4] != "" && ((board[0] === board[4] && board[4] === board[8]) || (board[2] === board[4] && board[4] === board[6]))) {
          // console.log("cross win");
          return true;
        }

        return false;
      }

      function youWin() {
        confetti()!.then(init);
      }

      function youLose() {
        setTimeout(() => {
          alert("You lose. Better luck next time.");
          init();
        }, 50);
      }

      function youDraw() {
        setTimeout(() => {
          alert("It's a draw. Try again.");
          init();
        }, 50);
      }
    };
    ttt();
    document.addEventListener("astro:after-swap", ttt);
  </script>
</Page>
