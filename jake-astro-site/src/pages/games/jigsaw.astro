---
import Page from "../../layouts/Page.astro";
---

<Page title="Jigsaw">
  <script src="/puzzle/js/headbreaker.js" is:inline></script>
  <div id="puzzle"></div>
  <script>
    const init = () => {
      let lob = new Image();
      lob.src = "/puzzle/images/lobster.jpg";
      lob.onload = () => {
        const jigsaw = new headbreaker.Canvas("puzzle", {
          width: 900,
          height: 700,
          pieceSize: 100,
          proximity: 20,
          borderFill: 10,
          strokeWidth: 2,
          lineSoftness: 0.18,
          outline: new headbreaker.outline.Rounded(),
          image: lob,
          maxPiecesCount: { x: 7, y: 6 },
        });
        jigsaw.adjustImagesToPuzzleHeight();
        jigsaw.autogenerate({
          horizontalPiecesCount: 4,
          verticalPiecesCount: 3,
        });
        jigsaw.shuffle(0.7);
        jigsaw.draw();
        jigsaw.attachSolvedValidator();
        jigsaw.onValid(() => {
          setTimeout(() => {
            alert("Congratulations! You solved the puzzle!");
            let game_wins = parseInt(localStorage.getItem("game-wins") || "0");
            game_wins += 1;
            localStorage.setItem("game-wins", game_wins.toString());
          }, 100);
        });
        jigsaw.onConnect((_piece, figure, _target, targetFigure) => {
          // paint borders on click
          // of conecting and conected figures
          figure.shape.stroke("orange");
          targetFigure.shape.stroke("orange");
          jigsaw.redraw();

          setTimeout(() => {
            // restore border colors
            // later
            figure.shape.stroke("black");
            targetFigure.shape.stroke("black");
            jigsaw.redraw();
          }, 200);
        });
      };
    };
    document.addEventListener("astro:page-load", init);
  </script>
</Page>
