---
import Page from "../../../layouts/Page.astro";
---

<Page title="Photo Zoom">
    <h1>Photo Zoom</h1>
    <div id="btns" class="hide">
        <button id="out">Zoom Out -</button>
        <button id="rst">Reset</button>
        <button id="in">Zoom In +</button>
    </div>
    <canvas id="canvas" width="600" height="300"></canvas>

    <style>
        #btns {
            display: flex;
            justify-content: center;
            padding: 1rem;
            position: absolute;
            top: 0;
            left: 0;
            background: rgba(0, 0, 0, 0.5);
        }
        #btns.hide {
            display: none;
        }
    </style>

    <script>
        function init() {
            const canvas = document.getElementById(
                "canvas",
            ) as HTMLCanvasElement;
            const ctx = canvas.getContext("2d") as CanvasRenderingContext2D;
            const btns = document.getElementById("btns") as HTMLDivElement;
            const btnIn = document.getElementById("in") as HTMLButtonElement;
            const btnOut = document.getElementById("out") as HTMLButtonElement;
            const btnRst = document.getElementById("rst") as HTMLButtonElement;

            type Rect = {
                x: number;
                y: number;
                w: number;
                h: number;
            };

            const rects: Rect[] = [{ x: 10, y: 10, w: 100, h: 100 }];

            let edit_item: Rect | undefined;

            // btnIn.addEventListener("click", zoomIn);
            // btnOut.addEventListener("click", zoomOut);
            // btnRst.addEventListener("click", reset);

            const img = new Image();
            img.src = "/imgs/hd.jpg";
            img.onload = () => {
                canvas.width = img.width;
                canvas.height = img.height;
                canvas.style.width = img.width + "px";
                canvas.style.height = img.height + "px";
                draw();
            };
            let zoom = 1;

            function draw() {
                // wipe canvas
                ctx.reset();

                // resize for zoom
                ctx.scale(zoom, zoom);

                // draw user image
                ctx.drawImage(img, 0, 0);

                rects.forEach((rect) => {
                    ctx.fillStyle = "#FF0000";
                    ctx.fillRect(rect.x, rect.y, rect.w, rect.h);
                });

                if (edit_item) {
                    ctx.fillStyle = "#00FF00";
                    ctx.fillRect(
                        edit_item.x,
                        edit_item.y,
                        edit_item.w,
                        edit_item.h,
                    );
                }
            }

            canvas.addEventListener("mousedown", (e) => {
                const x = e.offsetX;
                const y = e.offsetY;
                for (let i = 0; i < rects.length; i++) {
                    const rect = rects[i];
                    const inX = x >= rect.x && x <= rect.x + rect.w;
                    const inY = y >= rect.y && y <= rect.y + rect.h;
                    if (inX && inY) {
                        console.log("in rect", rect);
                        btns.classList.remove("hide");
                        btns.style.top = e.clientY - 50 + "px";
                        btns.style.left = e.clientX + "px";
                        edit_item = rect;
                        draw();
                        return;
                    }
                }
                edit_item = undefined;
                draw();
            });
        }
        document.addEventListener("astro:page-load", init);
    </script>
</Page>
