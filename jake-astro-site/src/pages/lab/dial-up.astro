---
import Page from "../../layouts/Page.astro";
---

<Page title="Virtual Dial-up">
    <div class="wrap">
        <div class="flex">
            <input id="pick" type="file" accept="image/*" />
            <select name="mode" id="mode">
                <option value="56k">Dialup</option>
                <option value="3g">3g Min</option>
                <option value="3g+">3g Mid</option>
                <option value="3g++">3g Max</option>
                <option value="4g">4g LTE</option>
            </select>
            <button id="reload">Reload</button>
        </div>
        <div id="preview">
            <img src="/imgs/hd.jpg" alt="" />
        </div>
    </div>
</Page>

<script>
    function init() {
        // https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types
        const fileTypes = [
            "image/apng",
            "image/bmp",
            "image/gif",
            "image/jpeg",
            "image/pjpeg",
            "image/png",
            "image/svg+xml",
            "image/tiff",
            "image/webp",
            "image/x-icon",
        ];

        let size_bytes = 894434;
        const mode = document.getElementById("mode") as HTMLSelectElement;
        mode.addEventListener("change", (e) => {
            const t = e.target as HTMLSelectElement;
            const sec = calcSec(size_bytes);
            console.log(sec);
            preview.style.setProperty("--time", sec + "s");
        });

        const dialup = document.getElementById("dialup") as HTMLDivElement;
        const preview = document.getElementById("preview") as HTMLDivElement;
        preview.classList.add("loading");
        const pick = document.getElementById("pick") as HTMLInputElement;
        pick.addEventListener("change", (e) => {
            const t = e.target as HTMLInputElement;
            const file = t.files?.[0] as File;

            if (file && fileTypes.includes(file.type)) {
                if (preview.classList.contains("loading")) {
                    preview.classList.remove("loading");
                    console.log("removed loading");
                }

                while (preview.lastChild && preview.lastChild !== dialup) {
                    preview.removeChild(preview.lastChild);
                } // clear the photo preview

                size_bytes = file.size; // in bytes
                const image = new Image();
                image.src = URL.createObjectURL(file);
                image.onload = () => {
                    const sec = calcSec(size_bytes);
                    const lines = (image.height / 8).toFixed();

                    preview.style.setProperty("--time", sec + "s");
                    preview.style.setProperty("--lines", lines);
                    preview.appendChild(image);
                    preview.classList.add("loading");
                    console.log(size_bytes);
                };
            }
        });

        function calcSec(file_size: number) {
            switch (mode.value) {
                case "4g":
                    return (file_size / 5_000_000).toFixed(2);
                case "3g++":
                    return (file_size / 900_000).toFixed(1);
                case "3g+":
                    return (file_size / 128_000).toFixed(1);
                case "3g":
                    return (file_size / 32_000).toFixed(1);
                default: //56k
                    return (file_size / 7_000).toFixed(0);
            }
        }

        const reload = document.getElementById("reload") as HTMLButtonElement;
        reload.addEventListener("click", () => {
            if (preview.classList.contains("loading")) {
                preview.classList.remove("loading");
            } else {
                preview.classList.add("loading");
            }
        });
    }

    document.addEventListener("astro:page-load", init);
</script>

<style>
    #preview {
        --time: 128s;
        --lines: 257;
        position: relative;
        width: 100%;
    }

    #preview::after {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        content: "";
        background-color: black;
        transition: none;
    }

    #preview.loading::after {
        top: 100%;
        transition: top var(--time) steps(var(--lines));
    }

    #preview img {
        width: 100%;
        height: auto;
    }

    .wrap {
        display: grid;
        gap: 1rem;
        justify-items: center;
        padding: 2rem;
    }
</style>
